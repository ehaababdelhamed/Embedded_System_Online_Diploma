/******************************************************************************
 * File Name: main.c
 * Description: Application for using FIFO data structure
 * Author: Ehab Mohamed Abdelhamed
 ******************************************************************************/
#include "Platform_Types.h"
#include <stdio.h>
#include <string.h>
#include "fifo.h"

#define BUFFER_1_SIZE	5

ELEMENT_TYPE buffer1[BUFFER_1_SIZE];

/* Main Function */
int main(void){
	ELEMENT_TYPE data=0;
	FIFO_Buf_t UART_buf;
	FIFO_init(&UART_buf, buffer1,  BUFFER_1_SIZE);
	uint32 i=0;
	uint8 *string=(uint8*)"Ehab Abdelhamed";
	printf("UART_Fifo_Buffer get : ");
	//send the large number of characters using small size buffer
	while(string[i]!='\0'){
		//push characters until the buffer is full or to end of string
		for(;string[i]!='\0'&&FIFO_add_item(&UART_buf,string[i]) == FIFO_NO_ERROR;i++);
		//get characters until the buffer is empty
		while(FIFO_get_item(&UART_buf,&data) == FIFO_NO_ERROR){
			printf("%c",data);
		}
	}
	return 0;
}

void testcase1(){
	//Positive test
	FIFO_Buf_t UART_buf1;
	if(FIFO_init(&UART_buf1, buffer1,  BUFFER_1_SIZE)==FIFO_NO_ERROR){
		printf("Test 1 is passed");
	}else{
		printf("Test 1 is failed");
	}
	//Negative test
	FIFO_Buf_t UART_buf2;
	int *buffer2=NULL;
	if(FIFO_init(&UART_buf2, buffer2,  BUFFER_1_SIZE)==FIFO_NULL){
		printf("Test 2 is passed");
	}else{
		printf("Test 2 is failed");
	}
}

void testcase1(){
	//Positive test
	FIFO_Buf_t UART_buf1;
	if(FIFO_init(&UART_buf1, buffer1,  BUFFER_1_SIZE)==FIFO_NO_ERROR){
		printf("Test 1 is passed");
	}else{
		printf("Test 1 is failed");
	}
	//Negative test
	FIFO_Buf_t UART_buf2;
	int *buffer2=NULL;
	if(FIFO_init(&UART_buf2, buffer2,  BUFFER_1_SIZE)==FIFO_NULL){
		printf("Test 2 is passed");
	}else{
		printf("Test 2 is failed");
	}
}

void testcase2(){
	FIFO_Buf_t UART_buf;
	FIFO_init(&UART_buf, buffer1,  BUFFER_1_SIZE);
	for(ELEMENT_TYPE i=0;i<7;i++){
		if(FIFO_enq(&UART_buf, i)==FIFO_NO_ERROR){

		}
	}






}
